package com.cmct.portal.sysmanagement;


import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cmct.common.util.AbstractController;
import com.cmct.common.util.ui.PageFormModel;
import com.cmct.common.util.ui.PageModel;
import com.cmct.portal.po.CustomerPO;
import com.cmct.portal.service.CustomerService;


@Controller
@RequestMapping("/sysmanagement/customer")
public class CustomerController extends AbstractController {
	
	private static String REL_ID = "customerList";
	
	@Autowired
	private CustomerService customerService;

	/**
	 * Ԥ���
	 */
	@RequestMapping(value = "/preadd")
	public ModelAndView preAdd() throws Exception {
		ModelAndView mav = new ModelAndView("pages/view/sysmanagement/customer/add");
		return mav;
	}



	@RequestMapping(value = "/add")
	@ResponseBody
	public String add(CustomerPO bean,HttpServletRequest request){
		bean.setIsdelete("N");
		customerService.saveCustomer(bean);
		return ajaxDoneSuccess(" ",true,REL_ID);
	}
	/**
	 * 
	 */
	@RequestMapping(value = "/list")
	public ModelAndView list(PageModel page,PageFormModel pageForm,HttpServletRequest req) throws Exception {		
		Collection<CustomerPO> list=null;
		List<CustomerPO> customers=new ArrayList<CustomerPO>();
		CustomerPO customer;
		
		Map propertiesMap =new HashMap();
		Integer start = 0;
		Integer limit=page.getNumPerPage();
		String sqlCount="select count(*) from CustomerPO where 1=1 ";
		

		if(pageForm.getPageNum()!=null){
			start=(Integer.valueOf(pageForm.getPageNum())-1)*page.getNumPerPage();
		}


		if(pageForm.getCust_name()!=null){
			if(pageForm.getCust_name().trim().length()>0){
				propertiesMap.put("cust_name", pageForm.getCust_name());
				sqlCount=sqlCount+" and cust_name= :cust_name";
			}
		}
		if(pageForm.getLocation()!=null){
			if(pageForm.getLocation().trim().length()>0){
				propertiesMap.put("location", pageForm.getLocation());
				sqlCount=sqlCount+" and address= :location";
			}
		}
		if(pageForm.getIsdelete()!=null){
			if(pageForm.getIsdelete().trim().length()>0){
				propertiesMap.put("isdelete", pageForm.getIsdelete());
				sqlCount=sqlCount+" and isdelete= :isdelete";
			}
		}
		if(pageForm.getContact()!=null){
			if(pageForm.getContact().trim().length()>0){
				propertiesMap.put("contact", pageForm.getContact());
				sqlCount=sqlCount+" and contact= :contact";
			}
		}
		if(pageForm.getPhone()!=null){
			if(pageForm.getPhone().trim().length()>0){
				propertiesMap.put("phone", pageForm.getPhone());
				sqlCount=sqlCount+" and phone= :phone";
			}
		}


		list=customerService.findPages(propertiesMap, start, limit);


		page.setTotalCount(customerService.getTotalCount_where(sqlCount, propertiesMap));		
		
		for(CustomerPO customerPO:list){
			customer=new CustomerPO();
			customer.setId(customerPO.getId());
			customer.setCust_name(customerPO.getCust_name());
			customer.setAddress(customerPO.getAddress());
			customer.setContact(customerPO.getContact());
			customer.setPhone(customerPO.getPhone());
			customer.setIsdelete(customerPO.getIsdelete());
			customer.setRemark(customerPO.getRemark());
			customers.add(customer);
		}
		Map mp=new HashMap();
		mp.put("list",customers);
		mp.put("page",page);
		mp.put("pageForm",pageForm);
		return new ModelAndView("/pages/view/sysmanagement/customer/list",mp);
	}


	
	@RequestMapping(value = "/preUpdate/{id}")
	public ModelAndView preUpdate(@PathVariable("id") Integer id) throws Exception {
		CustomerPO bean = customerService.findOne(id);
		ModelAndView mav = new ModelAndView("/pages/view/sysmanagement/customer/update");
		mav.addObject("bean", bean);
		return mav;
	}


	
	@RequestMapping(value = "/update")
	@ResponseBody
	public String update(CustomerPO bean,HttpServletRequest request) throws Exception {
		//������� 
		customerService.updateCustomer(bean);
		return ajaxDoneSuccess(" ",true,REL_ID);
	}
	
	/**
	 * ɾ��
	 */
	@RequestMapping(value = "/delete/{id}")
	@ResponseBody
	public String delete(@PathVariable("id") Integer id) throws Exception {
		CustomerPO bean = customerService.findOne(id);
		bean.setIsdelete("Y");
		customerService.updateCustomer(bean);
		return ajaxDoneSuccess("删除成功", false, REL_ID);
	}
	
	


	@RequestMapping(value = "/lookUp")
	public ModelAndView custList(PageModel page,PageFormModel pageForm,HttpServletRequest req) throws Exception {
		Collection<CustomerPO> list=null;
		List<CustomerPO> customers=new ArrayList<CustomerPO>();
		CustomerPO customer;
		
		Map propertiesMap =new HashMap();
		Integer start = 0;
		Integer limit=page.getNumPerPage();
		String sqlCount="select count(*) from CustomerPO where 1=1 ";
		propertiesMap.put("isdelete", "N");
		sqlCount=sqlCount+" and isdelete= :isdelete";
		
		if(pageForm.getPageNum()!=null){
			start=(Integer.valueOf(pageForm.getPageNum())-1)*page.getNumPerPage();
		}

		list=customerService.findPages(propertiesMap, start, limit);
		//������
		page.setTotalCount(customerService.getTotalCount_where(sqlCount, propertiesMap));		
		
		for(CustomerPO customerPO:list){
			customer=new CustomerPO();
			customer.setId(customerPO.getId());
			customer.setCust_name(customerPO.getCust_name());
			customer.setAddress(customerPO.getAddress());
			customer.setContact(customerPO.getContact());
			customer.setPhone(customerPO.getPhone());
			customer.setIsdelete(customerPO.getIsdelete());
			customer.setRemark(customerPO.getRemark());
			customers.add(customer);
		}
		Map mp=new HashMap();
		mp.put("list",customers);
		mp.put("page",page);
		return new ModelAndView("/pages/view/sysmanagement/customer/customerLookUp",mp);
	}
	
}
